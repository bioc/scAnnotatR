% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class.R, R/classifier.R, R/support.R
\name{checkObjectValidity}
\alias{checkObjectValidity}
\alias{checkCellTypeValidity}
\alias{checkMarkerGenesValidity}
\alias{checkParentValidity}
\alias{checkPThresValidity}
\alias{checkCaretModelValidity}
\alias{parent<-}
\alias{parent<-,scAnnotatR-method}
\alias{caret_model<-}
\alias{caret_model<-,scAnnotatR-method}
\alias{marker_genes<-}
\alias{marker_genes<-,scAnnotatR-method}
\alias{train_classifier_func}
\alias{test_classifier_func}
\alias{balance_dataset}
\alias{train_func}
\alias{transform_to_zscore}
\alias{select_marker_genes}
\alias{check_parent_child_coherence}
\alias{check_parent_child_coherence,dgCMatrix,vector-method}
\alias{filter_cells}
\alias{filter_cells,dgCMatrix,vector-method}
\alias{construct_tag_vect}
\alias{construct_tag_vect,vector-method}
\alias{process_parent_classifier}
\alias{process_parent_classifier,dgCMatrix-method}
\alias{make_prediction}
\alias{simplify_prediction}
\alias{verify_parent}
\alias{test_performance}
\alias{classify_clust}
\alias{.get_cache}
\alias{download_data_file}
\title{Internal functions of scAnnotatR package}
\usage{
checkObjectValidity(object)

checkCellTypeValidity(cell_type)

checkMarkerGenesValidity(marker_genes)

checkParentValidity(parent)

checkPThresValidity(p_thres)

checkCaretModelValidity(caret_model)

parent(classifier) <- value

\S4method{parent}{scAnnotatR}(classifier) <- value

caret_model(classifier) <- value

\S4method{caret_model}{scAnnotatR}(classifier) <- value

marker_genes(classifier) <- value

\S4method{marker_genes}{scAnnotatR}(classifier) <- value

train_classifier_func(
  mat,
  tag,
  cell_type,
  marker_genes,
  parent_tag,
  parent_cell,
  parent_classifier,
  path_to_models,
  zscore
)

test_classifier_func(
  mat,
  tag,
  classifier,
  parent_tag,
  target_cell_type,
  parent_classifier,
  path_to_models,
  zscore
)

balance_dataset(mat, tag)

train_func(mat, tag)

transform_to_zscore(mat)

select_marker_genes(mat, marker_genes)

check_parent_child_coherence(
  mat,
  tag,
  pos_parent,
  parent_cell,
  cell_type,
  target_cell_type
)

\S4method{check_parent_child_coherence}{dgCMatrix,vector}(
  mat,
  tag,
  pos_parent,
  parent_cell,
  cell_type,
  target_cell_type
)

filter_cells(mat, tag)

\S4method{filter_cells}{dgCMatrix,vector}(mat, tag)

construct_tag_vect(tag, cell_type)

\S4method{construct_tag_vect}{vector}(tag, cell_type)

process_parent_classifier(
  mat,
  parent_tag,
  parent_cell_type,
  parent_classifier,
  path_to_models,
  zscore = TRUE
)

\S4method{process_parent_classifier}{dgCMatrix}(
  mat,
  parent_tag,
  parent_cell_type,
  parent_classifier,
  path_to_models,
  zscore = TRUE
)

make_prediction(mat, classifier, pred_cells, ignore_ambiguous_result = TRUE)

simplify_prediction(meta.data, full_pred, classifiers)

verify_parent(mat, classifier, meta.data)

test_performance(mat, classifier, tag)

classify_clust(clusts, most_probable_cell_type)

.get_cache()

download_data_file(verbose = FALSE)
}
\arguments{
\item{object}{The request classifier to check.}

\item{cell_type}{name of cell type}

\item{marker_genes}{list of selected marker genes}

\item{parent}{Classifier parent to check.}

\item{p_thres}{Classifier probability threshold to check.}

\item{caret_model}{Classifier to check.}

\item{classifier}{classifier}

\item{value}{the new classifier}

\item{mat}{expression matrix}

\item{tag}{tag of data}

\item{parent_tag}{vector, named list indicating pre-assigned/predicted 
parent cell type}

\item{parent_cell}{name of parent cell type}

\item{parent_classifier}{\code{\link{scAnnotatR}} object corresponding 
to classification model for the parent cell type}

\item{path_to_models}{path to databases, or by default}

\item{zscore}{boolean indicating the transformation of gene expression 
in object to zscore or not}

\item{target_cell_type}{alternative cell types (in case of testing classifier)}

\item{pos_parent}{a vector indicating parent classifier prediction}

\item{parent_cell_type}{name of parent cell type}

\item{pred_cells}{a whole prediction for all cells}

\item{ignore_ambiguous_result}{whether ignore ambigouous result}

\item{meta.data}{object meta data}

\item{full_pred}{full prediction}

\item{classifiers}{classifiers}

\item{clusts}{cluster info}

\item{most_probable_cell_type}{predicted cell type}

\item{verbose}{logical indicating downloading the file or not}
}
\value{
TRUE if the classifier is valid or the reason why it is not

TRUE if the cell type is valid or the reason why it is not.

TRUE if the marker_genes is valid or the reason why it is not.

TRUE if the parent is valid or the reason why it is not.

TRUE if the p_thres is valid or the reason why it is not.

TRUE if the classifier is valid or the reason why it is not.

the classifier with the new parent.

scAnnotatR object with the new parent

the classifier with the new core caret model.

scAnnotatR object with the new trained classifier.

the classifier with the new marker genes

scAnnotatR object with the new marker genes.

caret trained model

model performance statistics

a list of balanced count matrix
and corresponding tags of balanced count matrix

the classification model (caret object)

row wise center-scaled count matrix

filtered matrix

list of adjusted tag

filtered matrix and corresponding tag

a binary vector for cell tag

list of cells which are positive to parent classifier

prediction

simplified prediction

applicable matrix

classifier performance

BiocFileCache object

path to the downloaded file in cache
}
\description{
Check if a scAnnotatR object is valid

Train a classifier for a new cell type from expression matrix
and tag 
If cell type has a parent, only available for \code{\link{scAnnotatR}}
object as parent cell classifying model.

Testing process from matrix and tag
}
